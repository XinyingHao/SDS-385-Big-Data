#########  Part II Application to Marketing  ##############

#Read in marketing data.
setwd("/Users/Xinying Hao/Dropbox/2016 Fall/Big Data/Exercise9")
data <- read.csv("social_marketing.csv")
X <- as.matrix(data[,-1])
n = nrow(X)
p = ncol(X)

#Chose square root in this case.
X <- sqrt(X)

factor1 <- sparse.matrix.factorization(X, lambdau=1.8, lambdav=1.8, iter=100, tol=1e-6)
factor1.v <- cbind.data.frame(colnames(X),factor1$v)[factor1$v>0,]
f1 <-factor1.v[order(factor1$v[factor1$v>0,],decreasing=TRUE),]

res <- X-factor1$X.mf
factor2 <- sparse.matrix.factorization(res, lambdau=1.8, lambdav=1.8, iter=100, tol=1e-6)
factor2.v <- cbind.data.frame(colnames(X),factor2$v)[factor2$v>0,]
f2 <-factor2.v[order(factor2$v[factor2$v>0,],decreasing=TRUE),]

res <- res-factor2$X.mf
factor3 <- sparse.matrix.factorization(res, lambdau=1.8, lambdav=1.8, iter=100, tol=1e-6)
factor3.v <- cbind.data.frame(colnames(X),factor3$v)[factor3$v>0,]
f3 <-factor3.v[order(factor3$v[factor3$v>0,],decreasing=TRUE),]

res <- res-factor3$X.mf
factor4 <- sparse.matrix.factorization(res, lambdau=1.8, lambdav=1.8, iter=100, tol=1e-6)
factor4.v <- cbind.data.frame(colnames(X),factor4$v)[factor4$v>0,]
f4 <-factor4.v[order(factor4$v[factor4$v>0,],decreasing=TRUE),]

res <- res-factor4$X.mf
factor5 <- sparse.matrix.factorization(res, lambdau=2, lambdav=2, iter=100, tol=1e-6)
factor5.v <- cbind.data.frame(colnames(X),factor5$v)[factor5$v>0,]
f5 <-factor5.v[order(factor5$v[factor5$v>0,],decreasing=TRUE),]

factor <- cbind.data.frame(factor1,factor2,factor3,factor4,factor5)

write.csv(f1,"f1.csv")
write.csv(f2,"f2.csv")
write.csv(f3,"f3.csv")
write.csv(f4,"f4.csv")
write.csv(f5,"f5.csv")


### LDA Implementation
dtm <- as.DocumentTermMatrix(as.matrix(data[,-1]),weighting=weightTf)
m.lda<-dtm2ldaformat(dtm,omit_empty = TRUE)
theme_set(theme_bw())  
set.seed(1234)

########Optimal topic numbers#######
result <- FindTopicsNumber(
  dtm,
  topics = seq(from = 2, to = 10, by = 1),
  metrics = c("Griffiths2004", "CaoJuan2009", "Arun2010", "Deveaud2014"),
  method = "Gibbs",
  control = list(seed = 1234),
  mc.cores = 2L,
  verbose = TRUE
)
FindTopicsNumber_plot(result)

K <- 5 ## Num clusters
result <- lda.collapsed.gibbs.sampler(m.lda$document,K,m.lda$vocab,10000,0.1,0.1, burnin = 5000,compute.log.likelihood=TRUE)

##Check convergence
plot(result$log.likelihood[1,5000:10000])


## Get the top words in the cluster
top.words <- top.topic.words(result$topics,36, by.score=TRUE)
write.csv(top.words,"LDA_top_words.csv")

## Draw wordcloud
wordcloud(words = top.words[1:13,1], freq = result$topics[1,top.words[1:13,1]], min.freq = 0,
          random.order=FALSE, rot.per=0.1, 
          colors=brewer.pal(8, "Dark2"))
wordcloud(words = top.words[1:13,2], freq = result$topics[2,top.words[1:13,2]], min.freq = 0,
          random.order=FALSE, rot.per=0.1, 
          colors=brewer.pal(8, "Dark2"))
wordcloud(words = top.words[1:13,3], freq = result$topics[3,top.words[1:13,3]], min.freq = 0,
          random.order=FALSE, rot.per=0.1, 
          colors=brewer.pal(8, "Dark2"))
wordcloud(words = top.words[1:13,4], freq = result$topics[4,top.words[1:13,4]], min.freq = 0,
          random.order=FALSE, rot.per=0.1, 
          colors=brewer.pal(8, "Dark2"))
wordcloud(words = top.words[1:13,5], freq = result$topics[5,top.words[1:13,5]], min.freq = 0,
          random.order=FALSE, rot.per=0.1, 
          colors=brewer.pal(8, "Dark2"))
top.words.mkt<-result$topics

#Topic density 
top.words.mkt.df<-melt(cbind(data.frame(top.words.mkt),document=factor(1:K)),variable.name="topic",id.vars = "document")
qplot(variable, value, fill=document, ylab="estimates of the number of times a word was assigned to a topic",data=top.words.mkt.df, geom="bar",stat="identity")+theme(axis.text.x = element_text(size=18,angle=45))

#Prob in each segment
topic.proportions <- t(result$document_sums) / colSums(result$document_sums)
prob <-topic.proportions
